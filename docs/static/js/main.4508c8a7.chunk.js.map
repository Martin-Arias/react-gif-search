{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","event","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gif","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","props","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAGPC,mBAAS,IAHF,mBAGrCC,EAHqC,KAGxBC,EAHwB,KA4B5C,OACI,sBAAMC,SAjBW,SAACC,GAClBA,EAAMC,iBAGFJ,EAAWK,OAAOC,OAAQ,IAI1BR,GAAe,SAAAS,GAAU,OAAMP,GAAN,mBAAoBO,OAC9CN,EAAc,MAQjB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SA1Bc,SAACP,GACxBF,EAAcE,EAAMQ,OAAOF,a,+BCVpBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEdC,EAFc,iDAEmCC,UAAUH,GAF7C,+DAGDI,MAAMF,GAHL,cAGdG,EAHc,gBAIGA,EAAKC,OAJR,uBAIZC,EAJY,EAIZA,KAEFC,EAAMD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACxB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVtB,kBAadM,GAbc,4CAAH,sDCARO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAErC,OACI,sBAAKc,UAAU,uDAAf,UACI,4BAAIJ,IACL,qBAAKK,IAAKf,EAAKgB,IAAKN,QCDlBO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECFb,SAACA,GAAc,IAAD,EAGZd,mBAAS,CAC/BqB,KAAK,GACLa,SAAQ,IAL0B,mBAG/BC,EAH+B,KAGxBC,EAHwB,KAsBtC,OAZAC,qBAAW,WAEPxB,EAAQC,GACPwB,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAKkB,EACLL,SAAQ,SAIlB,CAACpB,IAEIqB,EDjBeK,CAAc1B,GAAhCO,EAHiC,EAGjCA,KAAMa,EAH2B,EAG3BA,QAGV,OAEI,qCACI,oBAAIJ,UAAU,kDAAd,SAAiEhB,IAEhEoB,EAAU,mBAAGJ,UAAU,oCAAb,2BAAqE,KAGhF,qBAAKA,UAAU,YAAf,SAEIT,EAAKE,KAAI,SAAAC,GAAG,OAER,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEQlBgB,EA5BK,SAACC,GAEnB,IAF6B,EAMO1C,mBAJtB,CAAC,KAFc,mBAMtBQ,EANsB,KAMVT,EANU,KAQ3B,OACI,gCACI,4CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQS,EAAWe,KAAI,SAAAT,GAAQ,OAClB,cAAC,EAAD,CAEAA,SAAYA,GADNA,Y,MCjB/B6B,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.4508c8a7.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    //State\r\n    const [inputValue , setInputValue] = useState('');\r\n\r\n\r\n    //Set input value\r\n    const handleInputChange = (event) => {\r\n       setInputValue(event.target.value);\r\n    }\r\n\r\n    //Set value on submit\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n\r\n        if (inputValue.trim().length >2 ) {   \r\n        \r\n            //AÃ±ade una categoria \r\n\r\n            setCategories( categories => [ inputValue,...categories]);\r\n           setInputValue('')\r\n        }\r\n    }\r\n    \r\n    \r\n    \r\n    \r\n    return (\r\n        <form onSubmit = {handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n\r\n export const getGifs = async ( category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=79mUujxEEbh3kWdIBSFg79UaRtb3cX6v`\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gif = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n   return gif\r\n};","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id, title, url} ) => {\r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn animate__slow\">\r\n            <p>{title}</p>\r\n           <img src={url} alt={title}/>\r\n        </div>\r\n    )\r\n}\r\n","/* eslint-disable jsx-a11y/alt-text */\r\nimport React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n  \r\nconst { data, loading } = useFetchGifs( category );\r\n\r\n  \r\n    return (\r\n\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn animate__slow\">{category}</h3>\r\n\r\n            {loading ? <p className=\"animate__animated animate__fadeIn\">'Cargando...'</p> : null}\r\n\r\n\r\n            <div className=\"card-grid\">\r\n            {\r\n                data.map(img => (\r\n\r\n                    <GifGridItem\r\n                        key={img.id}\r\n                        {...img}\r\n                    />\r\n                ))\r\n            }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true\r\n    })\r\n\r\n\r\n    //Hace una peticion Http cada vwez que haya un cambio en category\r\n    useEffect( () => {\r\n\r\n        getGifs(category)\r\n        .then( imgs => {\r\n            setState({\r\n                data:imgs,\r\n                loading:false\r\n            })\r\n        })\r\n\r\n    },[category])\r\n\r\n    return state; //{data:[], loading: true}\r\n\r\n}","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\n\r\nconst GifExpertApp= (props) => {\r\n\r\n  const state = ['']\r\n\r\n\r\n\r\n  const [categories, setCategories] = useState(state)\r\n\r\n    return (\r\n        <div>\r\n            <h2>Gif Search</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr/>\r\n            \r\n            <ol>\r\n                {\r\n                    categories.map(category => (\r\n                         <GifGrid \r\n                         key={ category}\r\n                         category = {category}/>\r\n                    ))\r\n                }\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default GifExpertApp\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}